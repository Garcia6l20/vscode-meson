{
  "name": "meson",
  "displayName": "Meson",
  "description": "Meson language support for Visual Studio Code",
  "icon": "graphics/icon.png",
  "version": "1.3.2",
  "license": "Apache-2.0",
  "publisher": "asabil",
  "author": {
    "name": "Ali Sabil"
  },
  "contributors": [
    "Nathan Graule <solarliner@gmail.com> (https://solarliner.me)"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/asabil/vscode-meson.git"
  },
  "bugs": {
    "url": "https://github.com/asabil/vscode-meson/issues"
  },
  "homepage": "https://github.com/asabil/vscode-meson/blob/master/README.md",
  "engines": {
    "vscode": "^1.56.2"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:meson",
    "onCommand:mesonbuild.configure",
    "onCommand:mesonbuild.reconfigure",
    "onCommand:mesonbuild.build",
    "onCommand:mesonbuild.test",
    "workspaceContains:meson.build",
    "workspaceContains:nosem.build.py"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "mesonbuild.configure",
        "title": "Meson: Configure",
        "icon": "$(debug-configure)"
      },
      {
        "command": "mesonbuild.reconfigure",
        "title": "Meson: Reconfigure",
        "icon": "$(debug-configure)"
      },
      {
        "command": "mesonbuild.clean",
        "title": "Meson: Clean"
      },
      {
        "command": "mesonbuild.selectActiveTarget",
        "title": "Meson: Select active target",
        "icon": "./res/icon-executable.svg"
      },
      {
        "command": "mesonbuild.build",
        "title": "Meson: Build",
        "icon": "./res/icon-build.svg"
      },
      {
        "command": "mesonbuild.run",
        "title": "Meson: Run target",
        "icon": "$(run)"
      },
      {
        "command": "mesonbuild.debug",
        "title": "Meson: Debug target",
        "icon": "$(debug-alt)"
      },
      {
        "command": "mesonbuild.test",
        "title": "Meson: Run Unit Tests",
        "icon": "$(test-view-icon)"
      }
    ],
    "configuration": {
      "title": "Meson build configuration",
      "properties": {
        "mesonbuild.configureOnOpen": {
          "type": "boolean",
          "default": false,
          "description": "Have VS Code run meson configure/ninja reconfigure on folder open."
        },
        "mesonbuild.buildFolder": {
          "type": "string",
          "default": "builddir",
          "description": "Specify in which folder Meson build configure and build the project."
        },
        "mesonbuild.configureOptions": {
          "type": "array",
          "default": [
            "--buildtype=debug"
          ],
          "description": "Specify the list of configuration options used for Meson configuration."
        },
        "mesonbuild.mesonPath": {
          "type": "string",
          "default": "meson",
          "description": "Specify the meson executable to use"
        },
        "mesonbuild.ninjaPath": {
          "type": "string",
          "default": "ninja",
          "description": "Specify the ninja executable to use"
        }
      }
    },
    "taskDefinitions": [
      {
        "type": "meson",
        "required": [
          "mode"
        ],
        "properties": {
          "target": {
            "type": "string",
            "description": "The Meson target to... target",
            "default": "all",
            "dependencies": {
              "mode": {
                "enum": [
                  "build",
                  "test"
                ]
              }
            }
          },
          "filename": {
            "type": "string",
            "description": "Filename to run as part of the target",
            "dependencies": {
              "mode": {
                "enum": [
                  "run"
                ]
              }
            }
          },
          "mode": {
            "type": "string",
            "description": "Specify the kind of task to perform",
            "enum": [
              "build",
              "run",
              "debug",
              "test",
              "reconfigure",
              "clean"
            ],
            "default": "build"
          }
        }
      }
    ],
    "languages": [
      {
        "id": "meson",
        "aliases": [
          "Meson",
          "meson",
          "mesonbuild"
        ],
        "filenames": [
          "meson.build",
          "meson_options.txt"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "meson",
        "scopeName": "source.meson",
        "path": "./syntaxes/meson.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "meson",
        "path": "./snippets/meson.json"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "meson-sidebar",
          "title": "Meson",
          "icon": "./res/meson_32.svg"
        }
      ]
    },
    "views": {
      "meson-sidebar": [
        {
          "id": "meson-project",
          "name": "Current project"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "mesonbuild.reconfigure",
          "when": "view == meson-project",
          "group": "navigation@1"
        },
        {
          "command": "mesonbuild.build",
          "when": "view == meson-project",
          "group": "navigation@2"
        },
        {
          "command": "mesonbuild.clean",
          "when": "view == meson-project",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "mesonbuild.build",
          "when": "view == meson-project && viewItem =~ /canBuild=true/",
          "group": "inline"
        },
        {
          "command": "mesonbuild.run",
          "when": "view == meson-project && viewItem =~ /canRun=true/",
          "group": "inline"
        },
        {
          "command": "mesonbuild.debug",
          "when": "view == meson-project && viewItem =~ /canRun=true/",
          "group": "inline"
        },
        {
          "command": "mesonbuild.test",
          "when": "view == meson-project && viewItem =~ /isTestRoot=true/",
          "group": "inline"
        }
      ],
      "editor/title/context": [
        {
          "command": "mesonbuild.reconfigure",
          "when": "resourceFilename == meson.build || resourceFilename == nosem.build.py"
        }
      ],
      "editor/title": [
        {
          "command": "mesonbuild.reconfigure",
          "when": "resourceFilename == meson.build || resourceFilename == nosem.build.py"
        }
      ],
      "editor/context": [
        {
          "command": "mesonbuild.reconfigure",
          "when": "resourceFilename == meson.build || resourceFilename == nosem.build.py"
        }
      ],
      "explorer/context": [
        {
          "command": "mesonbuild.reconfigure",
          "when": "resourceFilename == meson.build || resourceFilename == nosem.build.py"
        }
      ],
      "touchBar": [
        {
          "command": "mesonbuild.reconfigure",
          "group": "Meson::build"
        },
        {
          "command": "mesonbuild.build",
          "group": "Meson::build"
        },
        {
          "command": "mesonbuild.run",
          "group": "Meson::run"
        },
        {
          "command": "mesonbuild.debug",
          "group": "Meson::run"
        }
      ]
    },
    "keybindings": [
      {
        "key": "f7",
        "when": "inMesonProject",
        "command": "mesonbuild.build"
      },
      {
        "key": "f5",
        "command": "mesonbuild.debug",
        "when": "!inDebugMode && inMesonProject"
      },
      {
        "key": "shift+f5",
        "command": "mesonbuild.run",
        "when": "!inDebugMode && inMesonProject"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/node": "^12.0.2",
    "typescript": "^4.3.2",
    "vscode": "^1.1.34"
  },
  "dependencies": {
    "array-flat-polyfill": "^1.0.1",
    "vsce": "^1.93.0",
    "vscode-cpptools": "^5.0.0"
  },
  "extensionDependencies": [
    "ms-vscode.cpptools"
  ]
}
